---
title: "Betrouwbaarheidsintervallen uitgelegd"
lang: be-nl
format:
  closeread-html:
    embed-resources: true
sidebar: false
---

Een concept dat we in statistiek zeer vaak tegen komen is een **betrouwbaarheidsinterval** ofwel een *Confidence Interval (CI)*. 

Dit concept wordt helaas zeer vaak misbegrepen! 

Hier proberen we je mee te nemen in de rationale achter een betrouwbaarheidsinterval. Vooraleer we daarmee starten, geven we een definitie mee die we in de literatuur vinden:

>(Confidence interval) An X% confidence interval for a parameter θ is an interval (L, U ) generated by a procedure that in repeated sampling has an X% probability of containing the true value of θ , for all possible values of θ.* (Neyman, J. (1937), zoals geciteerd in Morey et al. (2016))

Een ietwat vrije vertaling klinkt als volgt:

>Een X% betrouwbaarheidsinterval voor een parameter (zoals het gemiddelde) is een interval dat het resultaat is van een procedure (= een wijze van berekenen) die impliceert dat bij herhaalde steekproeftrekking X% van de resulterende intervallen berekend voor die steekproeven de werkelijke parameterwaarde uit de populatie bevat

Deze definitie is eigenlijk ook nog redelijk abstract. Hieronder maken we dit wat meer inzichtelijk. Scroll rustig door naar beneden en ga mee in dit statistisch verhaaltje. 

```{r warning=F, echo=F, message=F}
library(ggplot2)
library(dplyr)

set.seed(6)  # Voor reproduceerbaarheid

# Parameters
pop_mean <- 3
pop_sd <- 2.5
sample_size <- 100
n_intervals <- 100
conf_level <- 0.95
z_score <- qnorm(1 - (1 - conf_level)/2)

# Simuleer 100 steekproeven en hun betrouwbaarheidsintervallen
intervals <- data.frame(
  id = 1:n_intervals,
  sample_mean = replicate(n_intervals, mean(rnorm(sample_size, mean = pop_mean, sd = pop_sd)))
) %>%
  mutate(
    se = pop_sd / sqrt(sample_size),
    lower = sample_mean - z_score * se,
    upper = sample_mean + z_score * se,
    contains_mean = ifelse(lower <= pop_mean & upper >= pop_mean, TRUE, FALSE)
  )
```

:::::::::::::: cr-section

Heidi doet onderzoek naar verschillende vormen van online pestgedrag dat jongeren ervaren. Haar instrument daartoe is een vragenlijst waarin jongeren voor 10 verschillende vormen van online pestgedrag aangeven of ze dit zelf al dan niet hebben ondergaan in de afgelopen 3 maanden. Deze vragenlijst legt ze voor aan willekeurige steekproef van 100 jongeren. 

@cr-start 

Ze rapporteert het volgende over haar resultaten.  Het 95% betrouwbaarheidsinterval gaat dus van 2.48 tot 3.46. 

De definitie van een CI verwijst naar **een procedure**. 

[@cr-start]{highlight="cr-ondergrens,cr-bovengrens"}

In dit geval is de gehanteerde procedure het berekenen van een standaardfout voor het gemiddelde.

Deze standaardfout wordt berekend door de standaardafwijking ($= 2.5$) uit de steekproef te delen door de vierkantswortel van de steekproefomvang ($= \sqrt{100} = 10$)). 

De standaardfout voor het gemiddelde, gebaseerd op Heidi's steekproefgegevens bedraagt dus $0.25$.

Vervolgens hanteert Heidi de eigenschappen van de normaalverdeling en vermenigvuldigt ze deze standaardfout met 1.96. Het resultaat van deze vermenigvuldiging telt ze op en trekt ze af van het gemiddelde om de boven- en ondergrens te bepalen. 

| {#cr-start}
| Het gemiddelde voor deze steekproef bedraagt 2.97 met een standaardafwijking van 2.5. 
| 
| Uit deze schattingen leiden we een 95% CI af met als ondergrens 2.48 [(= 2.97 - 1.96 * 0.25)]{#cr-ondergrens} en bovengrens 3.46 [(= 2.97 + 1.96 * 0.25)]{#cr-bovengrens}. 

We kunnen dit interval ook visualiseren!

@cr-fig1

::: {#cr-fig1}
```{r warning=F, echo=F, message=F}
intervals %>%
    filter(
        id == 1
    ) %>%
    ggplot(aes(x = id, ymin = lower, ymax = upper)) +
    geom_errorbar() +
    geom_point(aes(y = sample_mean), size = 1) +
    scale_x_continuous(breaks = NULL) +
    scale_y_continuous(limits = c(0,5)) +
    labs(
        title = "95% Betrouwbaarheidsinterval voor het gemiddelde",
        y = "Ervaren online pestgedrag",
        x = " "
  ) +
  theme_minimal()
```
:::

*Maar hoe moet Heidi dit juist interpreteren?* 

*Wat betekent dit interval nu, gegeven de definitie hierboven?*

In de definitie voor het betrouwbaarheidsinterval lezen we iets over "herhaalde steekproeftrekking". 

@cr-fig2

Deze figuur geeft dit idee weer. In plaats van één betrouwbaarheidsinterval te berekenen kunnen we ons de situatie inbeelden dat Heidi dit 100 keer opnieuw doet. 

De figuur bevat 100 verschillende betrouwbaarheidsintervallen, elk gebaseerd op een nieuwe steekproef.

::: {#cr-fig2}
```{r warning=F, echo=F, message=F}
intervals %>%
    ggplot(aes(x = id, ymin = lower, ymax = upper)) +
    geom_errorbar(width = 0.4) +
    geom_point(aes(y = sample_mean), size = 1) +
    scale_y_continuous(limits = c(0,5)) +
    labs(
        title = "95% Betrouwbaarheidsinterval voor het gemiddelde",
        y = "Ervaren online pestgedrag",
        x = "Steekproeven"
  ) +
  theme_minimal()
```
:::

@cr-fig3

Het eerste betrouwbaarheidsinterval is het interval dat Heidi volgens haar procedure berekende. De overige intervallen zijn denkbeeldige intervallen.

::: {#cr-fig3}
```{r warning=F, echo=F, message=F}
intervals %>%
    mutate( Heidi =
        case_when(
            id == 1 ~ "Heidi's steekproef",
            id != 1 ~ "Denkbeeldige steekproef"
        )
    ) %>%
    ggplot(aes(x = id, ymin = lower, ymax = upper, color = Heidi)) +
    geom_errorbar(width = 0.4) +
    geom_point(aes(y = sample_mean), size = 1) +
    scale_color_manual(values = c("Heidi's steekproef" = "#117733", "Denkbeeldige steekproef" = "#DDCC77")) +
    scale_y_continuous(limits = c(0,5)) +
    labs(
        title = "95% Betrouwbaarheidsinterval voor het gemiddelde",
        y = "Ervaren online pestgedrag",
        x = "Steekproeven"
  ) +
  theme_minimal()
```
:::

@cr-fig4

Stel dat we ook het echte populatiegemiddelde zouden weten en dit mee op de figuur zetten als een stippenlijn doorheen de intervallen.

Dan valt op dat die stippenlijn de meeste betrouwbaarheidsintervallen doorkruist. 

::: {#cr-fig4}
```{r warning=F, echo=F, message=F}
intervals %>%
    mutate( Heidi =
        case_when(
            id == 1 ~ "Heidi's steekproef",
            id != 1 ~ "Denkbeeldige steekproef"
        )
    ) %>%
    ggplot(aes(x = id, ymin = lower, ymax = upper, color = Heidi)) +
    geom_errorbar(width = 0.4) +
    geom_point(aes(y = sample_mean), size = 1) +
    scale_color_manual(values = c("Heidi's steekproef" = "#117733", "Denkbeeldige steekproef" = "#DDCC77")) +
    scale_y_continuous(limits = c(0,5)) +    
    geom_hline(yintercept = pop_mean, linetype = "dashed", color = "black") +
    labs(
        title = "95% Betrouwbaarheidsinterval voor het gemiddelde",
        y = "Ervaren online pestgedrag",
        x = "Steekproeven"
  ) +
  theme_minimal()
```
:::

@cr-fig5

Dat valt nog beter op indien we de betrouwbaarheidsintervallen rood kleuren als het echte populatiegemiddelde niet in het betrouwbaarheidsinterval valt.

We zien dat van de 100 betrouwbaarheidsintervallen er 5 zijn die niet het werkelijk populatiegemiddelde bevatten.

Zo moet Heidi haar betrouwbaarheidsinterval ook interpreteren!

*Indien we 100 keer een nieuwe willekeurige steekproef zouden trekken, dan zal in 95 van deze steekproeven de procedure van het berekenen van een betrouwbaarheidsinterval resulteren in een betrouwbaarheidsinterval dat het werkelijk populatiegemiddelde bevat!*

Een betrouwbaarheidsinterval gaat dus over de procedure. 

Heidi kan met 95% zekerheid stellen dat haar betrouwbaarheidsinterval het werkelijke populatiegemiddelde rond online pestgedrag bevat. 

::: {#cr-fig5}
```{r warning=F, echo=F, message=F}
intervals %>%
    ggplot(aes(x = id, ymin = lower, ymax = upper, color = contains_mean)) +
    geom_errorbar(width = 0.4) +
    geom_point(aes(y = sample_mean), size = 1) +
    scale_y_continuous(limits = c(0,5)) +
    geom_hline(yintercept = pop_mean, linetype = "dashed", color = "black") +
    scale_color_manual(values = c("FALSE" = "red", "TRUE" = "#DDCC77")) +
    labs(
        title = "95% Betrouwbaarheidsinterval voor het gemiddelde",
        y = "Ervaren online pestgedrag",
        x = "Steekproeven",
        color = "Bevat populatiegemiddelde?"
  ) +
  theme_minimal()
```
:::

::::::::::::::

## Bronnen

Morey, R. D., Hoekstra, R., Rouder, J. N., Lee, M. D., & Wagenmakers, E.-J. (2016). The fallacy of placing confidence in confidence intervals. Psychonomic Bulletin & Review, 23(1), 103-123. https://doi.org/10.3758/s13423-015-0947-8

Neyman, J. (1937). Outline of a theory of statistical estimation based on the classical theory of probability. Philosophical Transactions of the Royal Society of London. Series A. Mathematical and Physical Sciences, 236, 333-380.